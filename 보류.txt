const Container = styled.div``;

const Poster = styled.div`
  width: 45%;
  height: 80vh;
  background-color: lightblue;
  background: url(${IMG_URL}/original/${(props) => props.$bgUrl}) no-repeat
    center / cover;
`;

const TitleWrap = styled.div``;

const Title = styled.div``;

const Information = styled.div``;

const Grade = styled.div``;

const Genre = styled.ul``;

const Premiere = styled.div``;

const Runtime = styled.div``;

const Line = styled.div``;

const Pwrap = styled.div``;

-----------------------------------------------------

{/* <Container>
    //   <Poster $bgUrl={movieDetailData.poster_path}></Poster>
    //   <TitleWrap>
    //     <Title>{movieDetailData.title}</Title>
    //     <Information>
    //       <Grade>평점 {movieDetailData.vote_average}점</Grade>
    //       <Genre>
    //         <li>애니메이션</li>
    //         <li>가족</li>
    //         <li>SF</li>
    //       </Genre>
    //       <Premiere>개봉일 {movieDetailData.release_date}</Premiere>
    //       <Runtime>런타임 {movieDetailData.runtime}분</Runtime>
    //     </Information>
    //     <Line></Line>
    //     <Pwrap>
    //       <p>{movieDetailData.overview}</p>
    //     </Pwrap>
    //   </TitleWrap>
    // </Container> */}

    ---------------------------------------------------

    <>
      {isLoading ? (
        <Loading />
      ) : (
        <>
          {movieData && (
            <>
              <Container>
                <Poster $bgUrl={movieData.poster_path}></Poster>
                <Wrap>
                  <Title>{movieData.title}</Title>
                  <Information>
                    <Grade>평점 {movieData.vote_average}점</Grade>
                    <Genre>
                      {movieDetail.genres.map((genre) => (
                        <li key={genre.id}>{genre.name}</li>
                      ))}
                    </Genre>
                    <Premiere>개봉일 {movieData.release_date}</Premiere>
                    <Runtime>런타임 {movieData.runtime}분</Runtime>
                  </Information>
                  <Line></Line>
                  <p>{movieData.overview}</p>
                </Wrap>
              </Container>
            </>
          )}
        </>
      )}
    </>

    ////////////////////////////////////////////////////////

   search 페이지

   import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";
import { movieSearch } from "../../api";

export const Search = () => {
  // api에 검색 요청에 맞게 url연결과 매개변수 작성
  // form 사용시 useForm 사용

  const {
    register,
    handleSubmit,
    formState: { errors, isValid },
  } = useForm({
    mode: "onSubmit",
  });

  const SearchHandler = (data) => {
    // console.log(data);
    const { search } = data;
    console.log("검색결과: " + search);
    useEffect(() => {
      (async () => {
        try {
          await movieSearch;
        } catch (error) {
          console.log("Error : " + error);
        }
      })();
    }, []);
  };

  // const [searchData, setSearchData] = useState();

  // useEffect(() => {
  //   (async () => {
  //     try {
  //       const a = await movieSearch();
  //       setSearchData(a);
  //     } catch (error) {}
  //   })();
  // }, []);

  return (
    <div>
      <h3 style={{ marginTop: "200px" }}>찾으시는 영화가 있으신가요?</h3>

      <form onSubmit={handleSubmit(SearchHandler)}>
        <input
          {...register("search", { required: "검색 내용을 입력해주세요" })}
          type="text"
          placeholder="영화 검색"
        />
      </form>
    </div>
  );
};